[2021-12-02 10:15:40.656] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 10:15:40.657] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 10:15:40.660] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 10:15:40.662] [DEBUG] Success to close database connection!
[2021-12-02 10:54:45.153] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 10:54:45.154] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 10:54:45.156] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 10:54:45.156] [DEBUG] Success to close database connection!
[2021-12-02 10:56:17.708] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 10:56:17.708] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 10:56:17.709] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 10:56:17.710] [DEBUG] Success to close database connection!
[2021-12-02 10:57:49.063] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 10:57:49.070] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 10:57:49.071] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 10:57:49.073] [DEBUG] Success to close database connection!
[2021-12-02 11:00:54.238] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:00:54.240] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:00:54.242] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:00:54.243] [DEBUG] Success to close database connection!
[2021-12-02 11:01:44.249] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:01:44.249] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:01:44.251] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:01:44.252] [DEBUG] Success to close database connection!
[2021-12-02 11:02:02.031] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:02:02.032] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:02:02.034] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:02:02.035] [DEBUG] Success to close database connection!
[2021-12-02 11:03:28.980] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:03:28.982] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:03:28.984] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:03:28.985] [DEBUG] Success to close database connection!
[2021-12-02 11:08:52.310] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:08:52.310] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:08:52.312] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:08:52.313] [DEBUG] Success to close database connection!
[2021-12-02 11:09:09.358] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:09:09.359] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:09:09.360] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:09:09.363] [DEBUG] Success to close database connection!
[2021-12-02 11:09:48.500] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:09:48.501] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:09:48.502] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:09:48.503] [DEBUG] Success to close database connection!
[2021-12-02 11:10:54.447] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:10:54.447] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:10:54.449] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:10:54.449] [DEBUG] Success to close database connection!
[2021-12-02 11:10:55.682] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 11:10:55.684] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}, {'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}]}]
[2021-12-02 11:11:01.228] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:11:01.228] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:11:01.230] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:11:01.230] [DEBUG] Success to close database connection!
[2021-12-02 11:11:04.526] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:11:04.526] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:11:04.528] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:11:04.529] [DEBUG] Success to close database connection!
[2021-12-02 11:11:46.510] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:11:46.511] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:11:46.512] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:11:46.512] [DEBUG] Success to close database connection!
[2021-12-02 11:13:05.344] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:13:05.345] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:13:05.346] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:13:05.347] [DEBUG] Success to close database connection!
[2021-12-02 11:14:02.388] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:14:02.388] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:14:02.390] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:14:02.390] [DEBUG] Success to close database connection!
[2021-12-02 11:26:06.829] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:26:06.829] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:26:06.830] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:26:06.831] [DEBUG] Success to close database connection!
[2021-12-02 11:31:17.490] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 11:31:17.491] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 11:31:17.492] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 11:31:17.492] [DEBUG] Success to close database connection!
[2021-12-02 13:19:02.693] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 13:19:02.695] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 13:19:02.697] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 13:19:02.698] [DEBUG] Success to close database connection!
[2021-12-02 13:31:01.804] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 13:31:01.805] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 13:31:01.806] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 13:31:01.807] [DEBUG] Success to close database connection!
[2021-12-02 13:47:28.191] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 13:47:28.191] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 13:47:28.192] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 13:47:28.193] [DEBUG] Success to close database connection!
[2021-12-02 13:48:21.864] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 13:48:21.865] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 13:48:21.866] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 13:48:21.868] [DEBUG] Success to close database connection!
[2021-12-02 13:59:48.579] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 13:59:48.579] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 13:59:48.581] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 13:59:48.581] [DEBUG] Success to close database connection!
[2021-12-02 14:00:22.477] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:00:22.477] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:00:22.478] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:00:22.480] [DEBUG] Success to close database connection!
[2021-12-02 14:03:47.052] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:03:47.052] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:03:47.054] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:03:47.054] [DEBUG] Success to close database connection!
[2021-12-02 14:04:14.246] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:04:14.247] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:04:14.248] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:04:14.249] [DEBUG] Success to close database connection!
[2021-12-02 14:04:40.765] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:04:40.765] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:04:40.766] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:04:40.769] [DEBUG] Success to close database connection!
[2021-12-02 14:04:42.354] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:04:42.355] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:04:42.356] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:04:42.357] [DEBUG] Success to close database connection!
[2021-12-02 14:05:05.988] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:05:05.988] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:05:05.989] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:05:05.990] [DEBUG] Success to close database connection!
[2021-12-02 14:05:59.121] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 14:05:59.125] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 14:06:00.854] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:06:00.861] [INFO] The user is Administrator!
[2021-12-02 14:06:00.973] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:06:00.974] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:06:00.974] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:06:00.976] [ERROR] Fail to display the field :[execute]
[2021-12-02 14:06:00.976] [ERROR] Fail to display the field :[expand]
[2021-12-02 14:06:00.979] [ERROR] Fail to display the field :[execute]
[2021-12-02 14:06:00.979] [ERROR] Fail to display the field :[expand]
[2021-12-02 14:06:11.352] [INFO] The execution result is: [SUCCESS|/data/report/20211202/20211202140611/ant|[{"scenario": "testsuite.test_Django_Restful.TestCase_Django_Restful", "start": "2021-12-02T14:06:10.410520", "name": "test_employee_info[param0-\u65b0\u589e\u79d1\u6280\u90e8\u95e8\u4fe1\u606f-expect0]", "outcome": "Passed"}, {"scenario": "testsuite.test_Django_Restful.TestCase_Django_Restful", "start": "2021-12-02T14:06:10.410520", "name": "test_employee_info[param1-\u624b\u673a\u53f7\u5927\u4e8e11\u4f4d-expect1]", "outcome": "Passed"}]]
[2021-12-02 14:06:12.543] [INFO] 220 Microsoft FTP Service
[2021-12-02 14:06:13.594] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/ant-html.html] has already exist!
[2021-12-02 14:06:13.613] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/JunitXml.xml] has already exist!
[2021-12-02 14:06:26.286] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:06:26.287] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:06:26.290] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:06:26.290] [DEBUG] Success to close database connection!
[2021-12-02 14:07:21.387] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:07:21.387] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:07:21.390] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:07:21.391] [DEBUG] Success to close database connection!
[2021-12-02 14:07:55.200] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:07:55.201] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:07:55.202] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:07:55.204] [DEBUG] Success to close database connection!
[2021-12-02 14:34:31.554] [INFO] User:[zhangwenke] authenticate successfully!
[2021-12-02 14:34:33.649] [INFO] User:[zhangwenke] login successfully!
[2021-12-02 14:34:38.940] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 14:34:38.944] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 14:34:41.261] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:34:41.272] [INFO] The user is Administrator!
[2021-12-02 14:34:41.441] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:34:41.442] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:34:41.442] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:35:01.522] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 14:35:01.525] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 14:35:02.877] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:35:02.885] [INFO] The user is Administrator!
[2021-12-02 14:35:03.130] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:35:03.130] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:35:03.131] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:35:05.625] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 14:35:05.627] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 14:35:06.846] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:35:06.852] [INFO] The user is Administrator!
[2021-12-02 14:35:06.959] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:35:06.960] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:35:06.960] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:35:06.963] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.971] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.975] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.978] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.982] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.986] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.989] [ERROR] Fail to display the field :[check]
[2021-12-02 14:35:06.992] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:01.028] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:36:01.035] [INFO] The user is Administrator!
[2021-12-02 14:36:03.855] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:36:03.864] [INFO] The user is Administrator!
[2021-12-02 14:36:03.981] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:36:03.982] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:36:03.982] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:36:03.985] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:03.991] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:03.994] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:03.997] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:04.000] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:04.005] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:04.011] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:04.016] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.156] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:36:11.163] [INFO] The user is Administrator!
[2021-12-02 14:36:11.296] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:36:11.297] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:36:11.297] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:36:11.300] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.306] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.313] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.317] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.323] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.328] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.334] [ERROR] Fail to display the field :[check]
[2021-12-02 14:36:11.339] [ERROR] Fail to display the field :[check]
[2021-12-02 14:37:56.198] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:37:56.223] [INFO] The user is Administrator!
[2021-12-02 14:37:56.329] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:37:56.329] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:37:56.331] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:37:56.332] [ERROR] Fail to display the field :[check]
[2021-12-02 14:37:56.336] [ERROR] Fail to display the field :[check]
[2021-12-02 14:37:56.340] [ERROR] Fail to display the field :[check]
[2021-12-02 14:37:56.343] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:02.239] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:38:02.246] [INFO] The user is Administrator!
[2021-12-02 14:38:02.354] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:38:02.354] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:38:02.354] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:38:02.356] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:19.375] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:38:19.381] [INFO] The user is Administrator!
[2021-12-02 14:38:19.483] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:38:19.483] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:38:19.484] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:38:19.486] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:26.920] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:38:26.944] [INFO] The user is Administrator!
[2021-12-02 14:38:27.062] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:38:27.063] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:38:27.063] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:38:27.066] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:27.071] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:27.077] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:27.082] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:32.665] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:38:32.690] [INFO] The user is Administrator!
[2021-12-02 14:38:32.805] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:38:32.805] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:38:32.806] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:38:32.808] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:32.811] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.261] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 14:38:49.279] [INFO] The user is Administrator!
[2021-12-02 14:38:49.390] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 14:38:49.390] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 14:38:49.390] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 14:38:49.392] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.396] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.399] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.406] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.410] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.414] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.419] [ERROR] Fail to display the field :[check]
[2021-12-02 14:38:49.423] [ERROR] Fail to display the field :[check]
[2021-12-02 14:45:41.437] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 14:45:41.442] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 14:45:46.138] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 14:45:46.138] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 14:45:46.140] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 14:45:46.141] [DEBUG] Success to close database connection!
[2021-12-02 15:04:16.910] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 15:04:16.915] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 15:04:18.179] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:04:18.186] [INFO] The user is Administrator!
[2021-12-02 15:04:18.317] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 15:04:18.318] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 15:04:18.318] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 15:04:18.321] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:04:18.321] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:04:18.324] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:04:18.324] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:04:49.316] [INFO] The execution result is: [SUCCESS|/data/report/20211202/20211202150449/ant|[{"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-02T15:04:45.432140", "name": "test_kms_user_login[param0-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u6b63\u786e-expect0]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-02T15:04:45.432140", "name": "test_kms_user_login[param1-\u7528\u6237\u540d\u6b63\u786e\u5bc6\u7801\u9519\u8bef-expect1]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-02T15:04:45.432140", "name": "test_kms_user_login[param2-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u6b63\u786e1-expect2]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-02T15:04:45.432140", "name": "test_kms_user_login[param3-\u7528\u6237\u540d\u6b63\u786e\u5bc6\u7801\u9519\u8bef2-expect3]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-02T15:04:45.432140", "name": "test_register_api[param0-\u6709\u6548\u7528\u6237\u540d-expect0]", "outcome": "Failed"}, {"scenario": "testsuite.test_UUMS.TestCase_UUMS", "start": "2021-12-02T15:04:45.432140", "name": "test_uums_login_api[param0-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u9519\u8bef-expect0]", "outcome": "Failed"}]]
[2021-12-02 15:04:51.464] [INFO] 220 Microsoft FTP Service
[2021-12-02 15:04:52.489] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/ant-html.html] has already exist!
[2021-12-02 15:04:52.546] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/JunitXml.xml] has already exist!
[2021-12-02 15:08:51.237] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:08:51.252] [INFO] The user is Administrator!
[2021-12-02 15:09:01.519] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:01.528] [INFO] The user is Administrator!
[2021-12-02 15:09:02.039] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:02.063] [INFO] The user is Administrator!
[2021-12-02 15:09:02.178] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 15:09:02.179] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 15:09:02.179] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 15:09:02.181] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:09:02.182] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:09:02.184] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:09:02.184] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:09:27.571] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:27.578] [INFO] The user is Administrator!
[2021-12-02 15:09:35.661] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:35.680] [INFO] The user is Administrator!
[2021-12-02 15:09:35.786] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 15:09:35.786] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 15:09:35.787] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 15:09:35.788] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:09:35.788] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:09:35.790] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:09:35.790] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:09:40.458] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:40.476] [INFO] The user is Administrator!
[2021-12-02 15:09:49.003] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:49.011] [INFO] The user is Administrator!
[2021-12-02 15:09:49.546] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-02 15:09:49.550] [INFO] The user is Administrator!
[2021-12-02 15:09:49.679] [DEBUG] Prepare to execute: delete_selected!
[2021-12-02 15:09:49.679] [DEBUG] Prepare to execute: valid_selected!
[2021-12-02 15:09:49.679] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-02 15:09:49.682] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:09:49.683] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:09:49.684] [ERROR] Fail to display the field :[execute]
[2021-12-02 15:09:49.685] [ERROR] Fail to display the field :[expand]
[2021-12-02 15:31:45.123] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-02 15:31:45.125] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-02 15:31:47.729] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 15:31:47.729] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 15:31:47.730] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 15:31:47.731] [DEBUG] Success to close database connection!
[2021-12-02 15:37:19.108] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 15:37:19.109] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 15:37:19.110] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 15:37:19.111] [DEBUG] Success to close database connection!
[2021-12-02 15:37:59.272] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 15:37:59.272] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 15:37:59.274] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 15:37:59.274] [DEBUG] Success to close database connection!
[2021-12-02 15:38:31.046] [INFO] User:[zhangwenke] authenticate successfully!
[2021-12-02 15:38:33.040] [INFO] User:[zhangwenke] login successfully!
[2021-12-02 15:38:39.223] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 15:38:39.224] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 15:38:39.226] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 15:38:39.227] [DEBUG] Success to close database connection!
[2021-12-02 15:38:58.171] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 15:38:58.172] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 15:38:58.174] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 15:38:58.175] [DEBUG] Success to close database connection!
[2021-12-02 18:03:40.362] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 18:03:40.362] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-02 18:03:40.363] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-02 18:03:40.363] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-02 18:03:40.367] [DEBUG] Success to close database connection!
[2021-12-02 18:03:40.367] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-02 18:03:40.369] [DEBUG] Success to close database connection!
[2021-12-03 09:01:56.851] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:01:56.852] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:01:56.852] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:01:56.852] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:01:56.855] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:01:56.855] [DEBUG] Success to close database connection!
[2021-12-03 09:01:56.856] [DEBUG] Success to close database connection!
[2021-12-03 09:06:50.277] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:06:50.277] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:06:50.278] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:06:50.278] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:06:50.281] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:06:50.282] [DEBUG] Success to close database connection!
[2021-12-03 09:06:50.283] [DEBUG] Success to close database connection!
[2021-12-03 09:07:42.952] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:07:42.953] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:07:42.953] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:07:42.953] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:07:42.954] [DEBUG] Success to close database connection!
[2021-12-03 09:07:42.954] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:07:42.959] [DEBUG] Success to close database connection!
[2021-12-03 09:08:40.666] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:08:40.667] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:08:40.667] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:08:40.667] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:08:40.669] [DEBUG] Success to close database connection!
[2021-12-03 09:08:40.670] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:08:40.672] [DEBUG] Success to close database connection!
[2021-12-03 09:09:11.484] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:09:11.484] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:09:11.484] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:09:11.486] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:09:11.486] [DEBUG] Success to close database connection!
[2021-12-03 09:09:11.487] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:09:11.489] [DEBUG] Success to close database connection!
[2021-12-03 09:15:32.632] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:15:32.633] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:15:32.635] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:15:32.635] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:15:32.635] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:15:32.636] [DEBUG] Success to close database connection!
[2021-12-03 09:15:32.637] [DEBUG] Success to close database connection!
[2021-12-03 09:18:33.148] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:18:33.148] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:18:33.148] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:18:33.149] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:18:33.150] [DEBUG] Success to close database connection!
[2021-12-03 09:18:33.150] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:18:33.152] [DEBUG] Success to close database connection!
[2021-12-03 09:18:55.029] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:18:55.030] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:18:55.031] [DEBUG] Success to close database connection!
[2021-12-03 09:18:55.058] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:18:55.058] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:18:55.060] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:18:55.064] [DEBUG] Success to close database connection!
[2021-12-03 09:21:42.068] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:21:42.068] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:21:42.068] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:21:42.069] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:21:42.070] [DEBUG] Success to close database connection!
[2021-12-03 09:21:42.070] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:21:42.072] [DEBUG] Success to close database connection!
[2021-12-03 09:27:24.801] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:27:24.802] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-03 09:27:24.804] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 6 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-03 09:27:24.807] [DEBUG] Success to close database connection!
[2021-12-03 09:27:24.808] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-03 09:27:24.809] [DEBUG] Prepare to execute sql: 
SELECT MONTH(create_time) AS monthNo,COUNT(*) AS through FROM `api_executionrecord` WHERE YEAR(create_time) = DATE_FORMAT(NOW(),'%Y') GROUP BY MONTH(create_time);
 
[2021-12-03 09:27:24.810] [DEBUG] Success to close database connection!
