[2021-12-01 09:54:32.255] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 09:54:32.255] [DEBUG] Prepare to execute sql: 
SELECT project,DATE_FORMAT(create_date,'%Y-%m-%d') AS createdate,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 09:54:32.257] [DEBUG] Success to close database connection!
[2021-12-01 09:55:23.531] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 09:55:23.531] [DEBUG] Prepare to execute sql: 
SELECT project,create_date AS createdate,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 09:55:23.533] [DEBUG] Success to close database connection!
[2021-12-01 10:03:44.681] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:03:44.682] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:03:44.683] [DEBUG] Success to close database connection!
[2021-12-01 10:06:03.924] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:06:03.926] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:06:03.927] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:06:03.928] [DEBUG] Success to close database connection!
[2021-12-01 10:21:26.057] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:21:26.058] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:21:26.059] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:21:26.060] [DEBUG] Success to close database connection!
[2021-12-01 10:22:18.956] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:22:18.956] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:22:18.957] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:22:18.958] [DEBUG] Success to close database connection!
[2021-12-01 10:24:12.548] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:24:12.550] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:24:12.551] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:24:12.552] [DEBUG] Success to close database connection!
[2021-12-01 10:26:47.836] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:26:47.836] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:26:47.837] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:26:47.838] [DEBUG] Success to close database connection!
[2021-12-01 10:27:07.575] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-01 10:27:07.578] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-01 10:27:11.448] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-01 10:27:11.454] [INFO] The user is Administrator!
[2021-12-01 10:27:11.549] [DEBUG] Prepare to execute: delete_selected!
[2021-12-01 10:27:11.550] [DEBUG] Prepare to execute: valid_selected!
[2021-12-01 10:27:11.550] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-01 10:27:11.552] [ERROR] Fail to display the field :[execute]
[2021-12-01 10:27:11.552] [ERROR] Fail to display the field :[expand]
[2021-12-01 10:27:11.554] [ERROR] Fail to display the field :[execute]
[2021-12-01 10:27:11.554] [ERROR] Fail to display the field :[expand]
[2021-12-01 10:27:24.045] [INFO] The execution result is: [SUCCESS|/data/report/20211201/20211201102724/ant|[{"scenario": "testsuite.test_Django_Restful.TestCase_Django_Restful", "start": "2021-12-01T10:27:23.670205", "name": "test_employee_info[param0-\u65b0\u589e\u79d1\u6280\u90e8\u95e8\u4fe1\u606f-expect0]", "outcome": "Passed"}, {"scenario": "testsuite.test_Django_Restful.TestCase_Django_Restful", "start": "2021-12-01T10:27:23.670205", "name": "test_employee_info[param1-\u624b\u673a\u53f7\u5927\u4e8e11\u4f4d-expect1]", "outcome": "Passed"}]]
[2021-12-01 10:27:25.312] [INFO] 220 Microsoft FTP Service
[2021-12-01 10:27:26.339] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/ant-html.html] has already exist!
[2021-12-01 10:27:26.364] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/JunitXml.xml] has already exist!
[2021-12-01 10:27:33.635] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:27:33.635] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:27:33.636] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:27:33.637] [DEBUG] Success to close database connection!
[2021-12-01 10:27:58.282] [DEBUG] 修剪后的全部项目信息:[{'机构管理服务': [{'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '新增科技部门信息', 'testsuit__testcase__scenario__parameter': [{'department': '行政部门'}, {'position': '项目主管'}, {'name': '张干'}, {'telephone': '13423450987'}], 'testsuit__testcase__scenario__validator': [{'name': '张干'}, {'department': '行政部门'}, {'position': '项目主管'}]}, {'testsuit__module': 'Django_Restful', 'testsuit__class_title': 'Django restframework 测试', 'testsuit__testcase__case': 'employee_info', 'testsuit__testcase__case_title': '员工信息', 'testsuit__testcase__case_description': '新增和查看员工信息', 'testsuit__testcase__templates__name': 'employee_info', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9091/employee/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'testsuit__testcase__scenario__scenario': '手机号大于11位', 'testsuit__testcase__scenario__parameter': [{'name': '张翰'}, {'department': '后期保障部'}, {'telephone': '189234590892'}, {'position': '保安'}], 'testsuit__testcase__scenario__validator': [{'code': '10001'}, {'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]}]}, {'用户中心服务': [{'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'register_api', 'testsuit__testcase__case_title': '用户注册KMS', 'testsuit__testcase__case_description': None, 'testsuit__testcase__templates__name': 'kum_register_pai', 'testsuit__testcase__templates__url': 'http://127.0.0.1:9092/1api/template/s222/', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'name': '{{name}}'}, 'testsuit__testcase__scenario__scenario': '有效用户名', 'testsuit__testcase__scenario__parameter': [{'name': 'root1'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均正确1', 'testsuit__testcase__scenario__parameter': [{'password': ' sdad@1332'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}]}, {'testsuit__module': 'KMS', 'testsuit__class_title': '秘钥管理系统', 'testsuit__testcase__case': 'kms_user_login', 'testsuit__testcase__case_title': 'KMS用户登录', 'testsuit__testcase__case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'testsuit__testcase__templates__name': 'kms_login_api', 'testsuit__testcase__templates__url': 'http://127.0.1.2:8080/login', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'testsuit__testcase__scenario__scenario': '用户名正确密码错误2', 'testsuit__testcase__scenario__parameter': [{'password': 'dsaddddddddd'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': False}, {'message': ' 密码错误'}]}, {'testsuit__module': 'UUMS', 'testsuit__class_title': 'UUMS用户中心管理系统', 'testsuit__testcase__case': 'uums_login_api', 'testsuit__testcase__case_title': 'UUMS用户登录认证接口', 'testsuit__testcase__case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'testsuit__testcase__templates__name': 'uums_login_api', 'testsuit__testcase__templates__url': 'https://www.baidu11.com', 'testsuit__testcase__templates__method': 1, 'testsuit__testcase__templates__header': {'Content-Type': 'application/json'}, 'testsuit__testcase__templates__data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'testsuit__testcase__scenario__scenario': '用户名和密码均错误', 'testsuit__testcase__scenario__parameter': [{'password': '123456'}, {'flag': '1'}, {'username': 'admin'}], 'testsuit__testcase__scenario__validator': [{'code': 200}, {'result': 'login  sussess'}, {'flag': True}]}]}]
[2021-12-01 10:27:58.284] [DEBUG] 汇总后的全部项目信息为：[{'机构管理服务': [{'Django_Restful': [{'module': 'Django_Restful', 'class_title': 'Django restframework 测试', 'case': 'employee_info', 'case_title': '员工信息', 'case_description': '新增和查看员工信息', 'templates_name': 'employee_info', 'url': 'http://127.0.0.1:9091/employee/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'sex': 0, 'name': '{{name}}', 'statue': 1, 'position': '{{position}}', 'telephone': '{{telephone}}', 'department': '{{department}}'}, 'scenarios': [[{'department': '行政部门', 'position': '项目主管', 'name': '张干', 'telephone': '13423450987'}, '新增科技部门信息', {'name': '张干', 'department': '行政部门', 'position': '项目主管'}], [{'name': '张翰', 'department': '后期保障部', 'telephone': '189234590892', 'position': '保安'}, '手机号大于11位', {'code': '10001', 'message.telephone.0': 'Ensure this field has no more than 11 characters.'}]]}]}]}, {'用户中心服务': [{'KMS': [{'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'register_api', 'case_title': '用户注册KMS', 'case_description': None, 'templates_name': 'kum_register_pai', 'url': 'http://127.0.0.1:9092/1api/template/s222/', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'name': '{{name}}'}, 'scenarios': [[{'name': 'root1'}, '有效用户名', {'code': 200}]]}, {'module': 'KMS', 'class_title': '秘钥管理系统', 'case': 'kms_user_login', 'case_title': 'KMS用户登录', 'case_description': 'KMS用户登录接口，涵盖用户名和用户密码', 'templates_name': 'kms_login_api', 'url': 'http://127.0.1.2:8080/login', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'check': 1, 'password': '{{password}}', 'username': '{{username}}'}, 'scenarios': [[{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误', {'code': 200, 'result': False, 'message': ' 密码错误'}], [{'password': ' sdad@1332', 'username': 'admin'}, '用户名和密码均正确1', {'code': 200}], [{'password': 'dsaddddddddd', 'username': 'admin'}, '用户名正确密码错误2', {'code': 200, 'result': False, 'message': ' 密码错误'}]]}]}, {'UUMS': [{'module': 'UUMS', 'class_title': 'UUMS用户中心管理系统', 'case': 'uums_login_api', 'case_title': 'UUMS用户登录认证接口', 'case_description': 'UUMS用户登录认证接口，验证用户的合规性', 'templates_name': 'uums_login_api', 'url': 'https://www.baidu11.com', 'method': 1, 'header': {'Content-Type': 'application/json'}, 'data': {'password': '{{password}}', 'username': '{{username}}', 'checkFlag': '{{flag}}'}, 'scenarios': [[{'password': '123456', 'flag': '1', 'username': 'admin'}, '用户名和密码均错误', {'code': 200, 'result': 'login  sussess', 'flag': True}]]}]}]}]
[2021-12-01 10:28:00.359] [DEBUG] Start to match permission: <class 'tuple'>
[2021-12-01 10:28:00.364] [INFO] The user is Administrator!
[2021-12-01 10:28:00.460] [DEBUG] Prepare to execute: delete_selected!
[2021-12-01 10:28:00.461] [DEBUG] Prepare to execute: valid_selected!
[2021-12-01 10:28:00.461] [DEBUG] Prepare to execute: invalid_selected!
[2021-12-01 10:28:00.462] [ERROR] Fail to display the field :[execute]
[2021-12-01 10:28:00.463] [ERROR] Fail to display the field :[expand]
[2021-12-01 10:28:00.464] [ERROR] Fail to display the field :[execute]
[2021-12-01 10:28:00.464] [ERROR] Fail to display the field :[expand]
[2021-12-01 10:28:12.103] [INFO] The execution result is: [SUCCESS|/data/report/20211201/20211201102812/ant|[{"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-01T10:28:08.653396", "name": "test_kms_user_login[param0-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u6b63\u786e-expect0]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-01T10:28:08.653396", "name": "test_kms_user_login[param1-\u7528\u6237\u540d\u6b63\u786e\u5bc6\u7801\u9519\u8bef-expect1]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-01T10:28:08.653396", "name": "test_kms_user_login[param2-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u6b63\u786e1-expect2]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-01T10:28:08.653396", "name": "test_kms_user_login[param3-\u7528\u6237\u540d\u6b63\u786e\u5bc6\u7801\u9519\u8bef2-expect3]", "outcome": "Failed"}, {"scenario": "testsuite.test_KMS.TestCase_KMS", "start": "2021-12-01T10:28:08.653396", "name": "test_register_api[param0-\u6709\u6548\u7528\u6237\u540d-expect0]", "outcome": "Failed"}, {"scenario": "testsuite.test_UUMS.TestCase_UUMS", "start": "2021-12-01T10:28:08.653396", "name": "test_uums_login_api[param0-\u7528\u6237\u540d\u548c\u5bc6\u7801\u5747\u9519\u8bef-expect0]", "outcome": "Failed"}]]
[2021-12-01 10:28:13.910] [INFO] 220 Microsoft FTP Service
[2021-12-01 10:28:14.931] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/ant-html.html] has already exist!
[2021-12-01 10:28:14.967] [DEBUG] File [C:/Users/lenovo/Desktop/web-rocker/static/report_temp/ant/JunitXml.xml] has already exist!
[2021-12-01 10:28:24.781] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:28:24.782] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:28:24.785] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:28:24.787] [DEBUG] Success to close database connection!
[2021-12-01 10:29:34.899] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:29:34.899] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:29:34.900] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:29:34.901] [DEBUG] Success to close database connection!
[2021-12-01 10:29:54.756] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:29:54.757] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:29:54.759] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:29:54.761] [DEBUG] Success to close database connection!
[2021-12-01 10:30:54.586] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:30:54.587] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:30:54.588] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:30:54.589] [DEBUG] Success to close database connection!
[2021-12-01 10:36:37.078] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:36:37.078] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:36:37.080] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:36:37.080] [DEBUG] Success to close database connection!
[2021-12-01 10:37:15.012] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:37:15.012] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:37:15.014] [DEBUG] Prepare to execute sql: 
    SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:37:15.015] [DEBUG] Success to close database connection!
[2021-12-01 10:38:18.541] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 10:38:18.542] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 10:38:18.543] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 10:38:18.544] [DEBUG] Success to close database connection!
[2021-12-01 11:16:27.838] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 11:16:27.838] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 11:16:27.840] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 11:16:27.842] [DEBUG] Success to close database connection!
[2021-12-01 11:17:16.175] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 11:17:16.176] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 11:17:16.177] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 11:17:16.179] [DEBUG] Success to close database connection!
[2021-12-01 13:03:04.085] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 13:03:04.086] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 13:03:04.087] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 13:03:04.089] [DEBUG] Success to close database connection!
[2021-12-01 13:06:02.582] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 13:06:02.582] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 13:06:02.584] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 13:06:02.586] [DEBUG] Success to close database connection!
[2021-12-01 13:06:16.341] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 13:06:16.342] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 13:06:16.343] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 13:06:16.344] [DEBUG] Success to close database connection!
[2021-12-01 13:06:31.777] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 13:06:31.777] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 13:06:31.779] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 13:06:31.781] [DEBUG] Success to close database connection!
[2021-12-01 13:06:47.284] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 13:06:47.284] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 13:06:47.285] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 13:06:47.285] [DEBUG] Success to close database connection!
[2021-12-01 13:09:03.000] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 13:09:03.001] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 13:09:03.002] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 13:09:03.003] [DEBUG] Success to close database connection!
[2021-12-01 15:48:47.513] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 15:48:47.514] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 15:48:47.515] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 15:48:47.516] [DEBUG] Success to close database connection!
[2021-12-01 15:49:19.750] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 15:49:19.751] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 15:49:19.753] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 15:49:19.755] [DEBUG] Success to close database connection!
[2021-12-01 15:49:41.405] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 15:49:41.406] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 15:49:41.407] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 15:49:41.408] [DEBUG] Success to close database connection!
[2021-12-01 16:58:11.171] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 16:58:11.171] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 16:58:11.174] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 16:58:11.178] [DEBUG] Success to close database connection!
[2021-12-01 16:58:14.598] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 16:58:14.599] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 16:58:14.601] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 16:58:14.601] [DEBUG] Success to close database connection!
[2021-12-01 16:58:54.926] [INFO] User:[zhangwenke] authenticate successfully!
[2021-12-01 16:58:55.239] [INFO] User:[zhangwenke] login successfully!
[2021-12-01 16:58:58.519] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 16:58:58.520] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 16:58:58.523] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 16:58:58.523] [DEBUG] Success to close database connection!
[2021-12-01 16:59:36.010] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 16:59:36.010] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 16:59:36.011] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 16:59:36.012] [DEBUG] Success to close database connection!
[2021-12-01 17:00:11.730] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:00:11.731] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:00:11.732] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:00:11.733] [DEBUG] Success to close database connection!
[2021-12-01 17:00:24.326] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:00:24.327] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:00:24.328] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:00:24.329] [DEBUG] Success to close database connection!
[2021-12-01 17:01:59.804] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:01:59.805] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:01:59.807] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:01:59.808] [DEBUG] Success to close database connection!
[2021-12-01 17:09:25.656] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:09:25.657] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:09:25.658] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:09:25.660] [DEBUG] Success to close database connection!
[2021-12-01 17:09:39.504] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:09:39.505] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:09:39.507] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:09:39.508] [DEBUG] Success to close database connection!
[2021-12-01 17:15:09.857] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:15:09.857] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:15:09.860] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:15:09.862] [DEBUG] Success to close database connection!
[2021-12-01 17:16:39.632] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:16:39.633] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:16:39.636] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:16:39.637] [DEBUG] Success to close database connection!
[2021-12-01 17:18:32.846] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:18:32.847] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:18:32.848] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:18:32.849] [DEBUG] Success to close database connection!
[2021-12-01 17:19:42.385] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:19:42.386] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:19:42.387] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:19:42.388] [DEBUG] Success to close database connection!
[2021-12-01 17:20:03.555] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:20:03.557] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:20:03.558] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:20:03.559] [DEBUG] Success to close database connection!
[2021-12-01 17:21:57.114] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:21:57.115] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:21:57.116] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:21:57.117] [DEBUG] Success to close database connection!
[2021-12-01 17:22:09.693] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:22:09.693] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:22:09.696] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:22:09.697] [DEBUG] Success to close database connection!
[2021-12-01 17:26:48.925] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:26:48.926] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:26:48.927] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:26:48.928] [DEBUG] Success to close database connection!
[2021-12-01 17:27:12.071] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 17:27:12.071] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 17:27:12.073] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 17:27:12.075] [DEBUG] Success to close database connection!
[2021-12-01 18:01:46.697] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 18:01:46.697] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 18:01:46.700] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 18:01:46.702] [DEBUG] Success to close database connection!
[2021-12-01 18:02:21.717] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 18:02:21.717] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 18:02:21.718] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 18:02:21.719] [DEBUG] Success to close database connection!
[2021-12-01 18:03:00.662] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 18:03:00.663] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 18:03:00.664] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 18:03:00.665] [DEBUG] Success to close database connection!
[2021-12-01 18:08:29.856] [DEBUG] Success to connect database [{'dbhost': '127.0.0.1', 'dbport': '3306', 'dbname': 'django', 'username': 'root', 'password': ''}]!
[2021-12-01 18:08:29.857] [DEBUG] Prepare to execute sql: 
SELECT project,create_date,COUNT(CASE WHEN result ='Passed' THEN 1 END)/COUNT(*) AS rate FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`,`create_date`;    
[2021-12-01 18:08:29.858] [DEBUG] Prepare to execute sql: 
SELECT project FROM `api_executionrecord` WHERE  DATE_SUB(CURDATE(), INTERVAL 20 DAY) <= DATE(`create_date`) GROUP BY `project`
[2021-12-01 18:08:29.860] [DEBUG] Success to close database connection!
